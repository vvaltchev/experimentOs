#!/bin/bash

##############################################
# Install the necessary packages using apt
##############################################

function install_packages {

   pkgs_list="wget gcc g++ git nasm gcc-multilib g++-multilib make binutils binutils-multiarch mtools"

   if [ -z "$TRAVIS" ]; then
      echo "Installing the necessary packages..."
      cmd="sudo apt-get install $pkgs_list"
      echo "By executing: $cmd"
      $cmd
   fi

}


###############################
# CMake 3.7
###############################

function build_cmake {

   pushd .
   wget https://cmake.org/files/v3.7/cmake-3.7.0-Linux-x86_64.tar.gz
   tar xf cmake-3.7.0-Linux-x86_64.tar.gz
   CMAKE=$TC/cmake-3.7.0-Linux-x86_64/bin/cmake
   popd

}

###############################
# LCOV (front end for GCOV)
###############################

function build_lcov {

   pushd .
   git clone https://github.com/linux-test-project/lcov.git
   cd lcov
   git checkout v1.13
   popd

}

###############################
# Build dietlibc
###############################

function build_dietlibc {

   pushd .

   wget https://www.fefe.de/dietlibc/dietlibc-0.33.tar.bz2
   tar xfj dietlibc-0.33.tar.bz2
   cd dietlibc-0.33
   sed -i 's/#define WANT_SYSENTER/\/\/#define WANT_SYSENTER/g' dietfeatures.h
   sed -i 's/-Wno-unused -Wredundant-decls/-Wno-unused -Wredundant-decls -fno-stack-protector/g' Makefile
   # The build of dietlibc fails even when succeeds, when we cross-build for i386
   # So, disabling the 'exit on first failure' option.
   set +e

   make -j i386 DEBUG=1

   # Restore the 'exit on first failure'
   set -e

   popd

}

##############################
# Build gtest
##############################

function build_gtest {
   
   pushd .
   git clone https://github.com/google/googletest.git
   cd googletest/googletest
   git checkout release-1.8.0
   $CMAKE .
   make -j
   popd

}

##################################
# Build libmusl (unused for now)
##################################

function build_libmusl {

   pushd .

   git clone git://git.musl-libc.org/musl
   cd musl
   git checkout v1.1.16

   mkdir ../musl-install
   mkdir ../musl-install/lib

   libmusl_opts1="--target=i386 --host=i386 --build=x86_64 --disable-shared"
   libmusl_opts2="--prefix=$TC/musl-install --exec-prefix=$TC/musl-install"
   libmusl_opts3="--syslibdir=$TC/musl-install/lib"

   ./configure $libmusl_opts1 $libmusl_opts2 $libmusl_opts3

   make
   make install

   popd

}


##########################################################
#
# MAIN 
#
##########################################################


# Exit on the first failure
set -e

# Main project directory
MAIN_DIR=$PWD

# Toolchain dir
TC=$PWD/toolchain

# Make the scripts build_scripts runnable from everywhere
export PATH="$MAIN_DIR/build_scripts:$PATH"

mkdir -p $TC
cd $TC


if [ "$1" == "-single" ]; then
   
   if [ $# -ne 2 ]; then
      echo "Expected the name of the function to call after the -single option"
   fi

   func="$2"

   if [ -n "$(type -t $func)" ] && [ "$(type -t $func)" = function ]; then
      echo "Executing single function '$func'"
      $func
   else
      echo "ERORR: The function '$func' does not exist."
      exit 1
   fi

   exit 0
fi


install_packages
build_cmake
build_lcov
build_dietlibc
build_gtest




